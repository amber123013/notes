使用 a = np.random.rand(5) #不要这样写
     a.shape = (5, 0)   #生成的是秩为一的矩阵 不是行向量也不是列向量a.T 为它自身
应使用 a = np.random.rand(5, 1) #定义为一个列向量
    or a = np.random.rand(1, 5) #定义为一个行向量
当不确定一个向量的纬度时使用这个
assert(a.shape == (5, 1)) #确保这是一个(5, 1) 的列向量
如果中间得到一个 a 的shape = (5,)
那么使用a = a.reshape(5,1) 使他的行为更好预测

--拟合 形象的说，拟合就是把平面上一系列的点，用一条光滑的曲线连接起来。因为这条曲线有无数种可能，从而有各种拟合方法。拟合的曲线一般可以用函数表示，根据这个函数的不同有不同的拟合名字。
如果待定函数是线性，就叫线性拟合或者线性回归(主要在统计中)，否则叫作非线性拟合或者非线性回归。
--过拟合 为了得到一致假设而使假设变得过度严格称为过拟合。
定义
给定一个假设空间H，一个假设h属于H，如果存在其他的假设h’属于H,使得在训练样例上h的错误率比h’小，但在整个实例分布上h’比h的错误率小，那么就说假设h过度拟合训练数据。

矩阵相乘是：用矩阵1的每一行和矩阵2的每一列的点积，得到一个矩阵。
l*m 的矩阵乘以 m*n 的矩阵，形成一个l*n 的矩阵。
矩阵相乘的约束：乘数1的列数要和乘数2的行数相等

使用np.exp? 获取该函数的快速文档

axis = 0 作用于每一列 输出矩阵是一行
axis = 1 作用于每一行 输出矩阵是一列

[:,index] 取第index列的数据
train_set_x_flatten[0:5,0] 取第零列的前5个数据（0 1 2 3 4）
X[n,:]是取第1维中下标为n的元素的所有值。

np.set_printoptions(threshold=np.inf) 添加后输出大数组是中间不被省略

squeeze(a)
也就是将所有维度为1的维度去掉。这个操作应该等价于a.reshape(-1)。

np.random.seed( ) 用于指定随机数生成时所用算法开始的整数值，如果使用相同的seed( )值，则每次生成的随机数都相同，如果不设置这个值，则系统根据时间来自己选择这个值，此时每次生成的随机数因时间差异而不同。

np.multiply() 对应位置元素相乘 （元素积）
例如 np.multiply([1,2,3], [4,5,6])
     array([ 4, 10, 18])
